stages:
#  - crawless-directus-tests
  - crawless-directus-api2
  - crawless-directus-api2-v10
  - crawless-directus
  - crawless-directus-clean
  - crawless-directus-dev

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_TLS_CERTDIR: ''

#image: aigent/dind-node
image: registry.gitlab.com/crawless/crawless-images/dind-do-k8s

services:
  - docker:dind

before_script:
  - |
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1986#note_549888956
    attempts=50
    echo "---- Waiting $attempts sec for docker to come up ----"
    while ! docker info > /dev/null 2>&1; do
        echo "Connection attempts left: $attempts"
        if [ $attempts -eq 0 ]; then
            echo "Couldn't connect to docker, no attempts left"
            return 1
        fi;
        let attempts=$attempts-1
        echo "Connection to docker failed"
        sleep 1
    done
    echo "---- Docker came up ----"
  - docker info
  - echo $CI_REGISTRY_USER
  - echo $CI_REGISTRY
  - echo $CI_JOB_TOKEN
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

after_script:
  - docker logout $CI_REGISTRY

docker_build:
  stage: crawless-directus
  variables:
    CI_DEBUG_TRACE: 'false'
    IMAGE_NAME: $CI_REGISTRY_IMAGE
  retry: 2
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-latest}
    - docker build -t $IMAGE_NAME:$IMAGE_TAG --build-arg SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" --build-arg CI_API_V4_URL="${CI_API_V4_URL}" --build-arg GITLAB_PIPELINE_TOKEN="${GITLAB_PIPELINE_TOKEN}" --build-arg CUSTOM_EXTENSION=1 --build-arg CHAT_EXTENSION=1 .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  #    - 'curl --user $KEEL_USERNAME:$KEEL_PASSWORD -X POST -H "Content-Type: application/json" --data "{\"name\":\"${IMAGE_NAME}\",\"tag\":\"${IMAGE_TAG}\"}" $KEEL_WEBHOOK --insecure'
  tags:
    - crawless
  only:
    - main

docker_build_clean:
  stage: crawless-directus
  variables:
    CI_DEBUG_TRACE: 'false'
    IMAGE_NAME: $CI_REGISTRY_IMAGE
  retry: 2
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-latestclean}
    - docker build -t $IMAGE_NAME:$IMAGE_TAG --build-arg SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" --build-arg CI_API_V4_URL="${CI_API_V4_URL}" --build-arg GITLAB_PIPELINE_TOKEN="${GITLAB_PIPELINE_TOKEN}" --build-arg CUSTOM_EXTENSION=1 .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  #    - 'curl --user $KEEL_USERNAME:$KEEL_PASSWORD -X POST -H "Content-Type: application/json" --data "{\"name\":\"${IMAGE_NAME}\",\"tag\":\"${IMAGE_TAG}\"}" $KEEL_WEBHOOK --insecure'
  tags:
    - crawless
  only:
    - main

#docker_test_build:
#  stage: crawless-directus-tests
#  variables:
#    CI_DEBUG_TRACE: 'false'
#    IMAGE_NAME: $CI_REGISTRY_IMAGE
#  retry: 2
#  script:
#    - export IMAGE_TAG=${CI_COMMIT_TAG:-test}
#    - docker build -t $IMAGE_NAME:$IMAGE_TAG --build-arg SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" --build-arg
#      GITLAB_PIPELINE_TOKEN="${GITLAB_PIPELINE_TOKEN}" --build-arg CI_API_V4_URL="${CI_API_V4_URL}" --build-arg CUSTOM_EXTENSION=1 --build-arg
#      LEAD_EXTENSION=1 --build-arg CHAT_EXTENSION=1 -f DockerfileExtensions .
#    - docker push $IMAGE_NAME:$IMAGE_TAG
#    - doctl kubernetes cluster kubeconfig save k8s-stage-fra1
#    - kubectl rollout restart deployment directustests-admin-directus-next -n workflow-websites
#    - kubectl rollout restart deployment privateautoleads-admin-directus-next -n workflow-websites
#  tags:
#    - crawless
#  only:
#    - main


docker_api2_build:
  stage: crawless-directus-api2
  variables:
    CI_DEBUG_TRACE: 'false'
    IMAGE_NAME: $CI_REGISTRY_IMAGE
  retry: 2
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-api2}
    - docker build -t $IMAGE_NAME:$IMAGE_TAG --build-arg SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" --build-arg
      GITLAB_PIPELINE_TOKEN="${GITLAB_PIPELINE_TOKEN}" --build-arg CI_API_V4_URL="${CI_API_V4_URL}" --build-arg CUSTOM_EXTENSION=1 --build-arg CHAT_EXTENSION=1 --build-arg COLAB_EXTENSION=1 --build-arg PAYMENT_EXTENSION=1 --build-arg DEVICES_EXTENSION=1 -f DockerfileExtensions .
    - docker push $IMAGE_NAME:$IMAGE_TAG
#    - doctl kubernetes cluster kubeconfig save k8s-stage-fra1
#    - kubectl rollout restart deployment crawless-api-directus-directus-next -n default
  tags:
    - crawless
  only:
    - main

docker_api2_v10_build:
  stage: crawless-directus-api2-v10
  variables:
    CI_DEBUG_TRACE: 'false'
    IMAGE_NAME: $CI_REGISTRY_IMAGE
  retry: 2
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-api2v10}
    - docker build -t $IMAGE_NAME:$IMAGE_TAG --build-arg SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" --build-arg
      GITLAB_PIPELINE_TOKEN="${GITLAB_PIPELINE_TOKEN}" --build-arg CI_API_V4_URL="${CI_API_V4_URL}" --build-arg CUSTOM_EXTENSION=1 --build-arg CHAT_EXTENSION=1 --build-arg COLAB_EXTENSION=1 --build-arg PAYMENT_EXTENSION=1 -f DockerfileExtensions .
    - docker push $IMAGE_NAME:$IMAGE_TAG
#    - doctl kubernetes cluster kubeconfig save k8s-stage-fra1
#    - kubectl rollout restart deployment crawless-api-directus-directus-next -n default
  tags:
    - crawless
  only:
    - v10

docker_dev_build:
  stage: crawless-directus-dev
  variables:
    CI_DEBUG_TRACE: 'false'
    IMAGE_NAME: $CI_REGISTRY_IMAGE
  retry: 2
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-dev}
    - echo $IMAGE_TAG
    - docker build -t $IMAGE_NAME:$IMAGE_TAG --build-arg SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" --build-arg CI_API_V4_URL="${CI_API_V4_URL}" --build-arg GITLAB_PIPELINE_TOKEN="${GITLAB_PIPELINE_TOKEN}" --build-arg CUSTOM_EXTENSION=1 --build-arg CHAT_EXTENSION=1 .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  #    - 'curl --user $KEEL_USERNAME:$KEEL_PASSWORD -X POST -H "Content-Type: application/json" --data "{\"name\":\"${IMAGE_NAME}\",\"tag\":\"${IMAGE_TAG}\"}" $KEEL_WEBHOOK --insecure'
  tags:
    - crawless
  only:
    - dev
